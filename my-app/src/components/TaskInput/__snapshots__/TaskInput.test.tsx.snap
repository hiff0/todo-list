// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TaskInput component snapshot with add mode 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="taskinput"
      >
        <input
          class="input"
          placeholder=" "
          type="text"
          value=""
        />
        <div
          class="buttons"
        >
          <button
            style="margin: 0px; border-radius: 5px; cursor: pointer; height: 30px; background: rgb(101, 106, 247);"
          >
            Добавить
          </button>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="taskinput"
    >
      <input
        class="input"
        placeholder=" "
        type="text"
        value=""
      />
      <div
        class="buttons"
      >
        <button
          style="margin: 0px; border-radius: 5px; cursor: pointer; height: 30px; background: rgb(101, 106, 247);"
        >
          Добавить
        </button>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`TaskInput component snapshot with edit mode 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="taskinput"
      >
        <input
          class="input"
          placeholder="Измените задачу"
          type="text"
          value=""
        />
        <div
          class="buttons"
        >
          <button
            style="margin: 0px; border-radius: 5px; cursor: pointer; height: 30px; background: rgb(214, 126, 126);"
          >
            Изменить
          </button>
          <button
            style="margin: 0px; border-radius: 5px; cursor: pointer; height: 30px; background: rgb(240, 14, 14);"
          >
            Отменить
          </button>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="taskinput"
    >
      <input
        class="input"
        placeholder="Измените задачу"
        type="text"
        value=""
      />
      <div
        class="buttons"
      >
        <button
          style="margin: 0px; border-radius: 5px; cursor: pointer; height: 30px; background: rgb(214, 126, 126);"
        >
          Изменить
        </button>
        <button
          style="margin: 0px; border-radius: 5px; cursor: pointer; height: 30px; background: rgb(240, 14, 14);"
        >
          Отменить
        </button>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
